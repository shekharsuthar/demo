name: Generete release from milestone
on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      milestone:
        description: "v1.0.0"
        required: true
      version:
        description: "v1.0.0"
        required: true
jobs:
  generate-release:
    name: Generete release from milestone
    runs-on: ubuntu-latest
 
    steps:
      - name: Any Name Bash Test Step
        shell: bash
        run: |
          echo "GH_REPO: $GH_REPO"
          echo "GH_REPO_O: $GH_REPO_O"
          echo "GH_T: $GH_T"
        env:
          GH_REPO: ${{ github.repository }}
          GH_REPO_O: ${{ github.repository_owner }}
          GH_T: ${{ github.event.input.milestone }}
      - name: Relese notes format
        uses: Beakyn/gha-format-release-notes@v1.0.1
        id: format
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          # required
          repository: ${{ github.repository }}
          milestone: ${{ github.event.inputs.milestone }}

          # optional
          custom-row: "${issue.number} <--> ${issue.title}"
          custom-group-by-label: |
            [
              {
                "title": "### Feature üéâ",
                "labels": ["feature"]
              },
              {
                "title": "### Bug Fixes üêõ",
                "labels": ["bug"]
              },
              {
                "title": "### Refactor & Improvements ‚ú®",
                "labels": ["enhancement", "refactor", "chore"]
              }
            ]
## some data 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{steps.format.outputs.release-notes}}
          draft: false
          prerelease: false

      - name: Close milestone
        uses: Beakyn/gha-close-milestone@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          # required
          repository: ${{ github.repository }}
          milestone: ${{ github.event.inputs.milestone }}
